#!/bin/bash
#
# Adds a new user belonging to given groups
# Gets a random password from OneTimeSecret and emails it to the user
#
# $1 - username
# $2 - groups
# $3 - user email

SCRIPT=$0
PY_PATH=/usr/bin/python3

# One Time Secret Config
OTS_USER=myusername@this.com
OTS_KEY=api-key-provided-by-ots
OTS_TTL=86400

# *falls on sword*
# $1 - tombstone message
function die {
    echo $1
    exit 1
}

# Assert proper usage
if [ $# -ne 3 ]; then
    die "USAGE: $SCRIPT USERNAME GROUP1,GROUP2 USER_EMAIL"
fi

# Assert root
if [ $UID -ne 0 ]; then
    die "Must be root!"
fi

# Don't recreate that user, dummy!
# $1 - username
function die_if_user_exists {
    cat /etc/passwd | grep $1 &> /dev/null
    if [ $? -eq 0 ]; then
        die "User \"$1\" already exists!"
    fi
}

# Create user
# $1 - username
# $2 - comma delimited groups
function create_server_user {
    echo Creating user: "$1"
    adduser $1 --disabled-password --gecos ""

    echo Adding $1 to groups $2
    usermod -a -G $2 $1
}

# Change user password
# $1 - username
# $2 - password
function change_user_password {
    echo "Setting $1's password..."
    echo -e "$2\n$2" | passwd $1 &> /dev/null
}

# Create a new TT user
# $1 - username
# $2 - groups
# $3 - email
function new_server_user {
    die_if_user_exists $1

    curl_opts=( -s -d "recipient=${3}&secret=SECRET&ttl=${OTS_TTL}" -u "${OTS_USER}:${OTS_KEY}" https://onetimesecret.com/api/v1/generate )
    curl_output=`curl "${curl_opts[@]}"`
    new_password="`echo $curl_output | $PY_PATH -c "import sys, json; print(json.load(sys.stdin)['value'])"`"
    
    create_server_user $1 $2
    change_user_password $1 $new_password
}

new_server_user $1 $2 $3
